{"version":3,"sources":["images/photo1.png","images/photo2.png","images/photo3.png","images/photo4.png","images/photo5.png","images/photo6.png","images/photo7.png","images/photo8.png","images/photo9.png","images/photo10.png","images/photo11.png","images/photo12.png","images/photo13.png","images/photo14.png","images/photo15.png","images/photo16.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","photos","id","photo","photo1","clicked","photo2","photo3","photo4","photo5","photo6","photo7","photo8","photo9","photo10","photo11","photo12","photo13","photo14","photo15","photo16","App","state","message","score","HighScore","handlePhotosClick","event","Number","target","dataset","console","log","clone","_this","lost","i","length","setState","massage","sort","Math","random","alert","that","Object","assertThisInitialized","setTimeout","_this2","this","displayPhotos","map","each","react_default","a","createElement","key","alt","data-id","src","onClick","className","Container_default","Row_default","Col_default","size","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.233f03ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/photo1.77fdd7bf.png\";","module.exports = __webpack_public_path__ + \"static/media/photo2.f0ae6b64.png\";","module.exports = __webpack_public_path__ + \"static/media/photo3.cc2ae13e.png\";","module.exports = __webpack_public_path__ + \"static/media/photo4.3b9dfe2c.png\";","module.exports = __webpack_public_path__ + \"static/media/photo5.38cffebe.png\";","module.exports = __webpack_public_path__ + \"static/media/photo6.5304ede4.png\";","module.exports = __webpack_public_path__ + \"static/media/photo7.70e993f8.png\";","module.exports = __webpack_public_path__ + \"static/media/photo8.a48362ff.png\";","module.exports = __webpack_public_path__ + \"static/media/photo9.92d8d514.png\";","module.exports = __webpack_public_path__ + \"static/media/photo10.bbd587cf.png\";","module.exports = __webpack_public_path__ + \"static/media/photo11.1a25c832.png\";","module.exports = __webpack_public_path__ + \"static/media/photo12.bde35fdc.png\";","module.exports = __webpack_public_path__ + \"static/media/photo13.3b46d348.png\";","module.exports = __webpack_public_path__ + \"static/media/photo14.a21c0538.png\";","module.exports = __webpack_public_path__ + \"static/media/photo15.d0481572.png\";","module.exports = __webpack_public_path__ + \"static/media/photo16.19a67160.png\";","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport './App.css';\nimport photo1 from './images/photo1.png'\nimport photo2 from './images/photo2.png'\nimport photo3 from './images/photo3.png'\nimport photo4 from './images/photo4.png'\nimport photo5 from './images/photo5.png'\nimport photo6 from './images/photo6.png'\nimport photo7 from './images/photo7.png'\nimport photo8 from './images/photo8.png'\nimport photo9 from './images/photo9.png'\nimport photo10 from './images/photo10.png'\nimport photo11 from './images/photo11.png'\nimport photo12 from './images/photo12.png'\nimport photo13 from './images/photo13.png'\nimport photo14 from './images/photo14.png'\nimport photo15 from './images/photo15.png'\nimport photo16 from './images/photo16.png'\n\n\n\nconst photos = [\n{\n  id: 1,\n  photo: photo1,\n  clicked: false\n},\n{\n  id: 2,\n  photo: photo2,\n  clicked: false\n},\n{\n  id: 3,\n  photo: photo3,\n  clicked: false\n},\n{\n  id: 4,\n  photo: photo4,\n  clicked: false\n},\n{\n  id: 5,\n  photo: photo5,\n  clicked: false\n},\n{\n  id: 6,\n  photo: photo6,\n  clicked: false\n},\n{\n  id: 7,\n  photo: photo7,\n  clicked: false\n},\n{\n  id: 8,\n  photo: photo8,\n  clicked: false\n},\n{\n  id: 9,\n  photo: photo9,\n  clicked: false\n},\n{\n  id: 10,\n  photo: photo10,\n  clicked: false\n},\n{\n  id: 11,\n  photo: photo11,\n  clicked: false\n},\n{\n  id: 12,\n  photo: photo12,\n  clicked: false\n},\n{\n  id: 13,\n  photo: photo13,\n  clicked: false\n},\n{\n  id: 14,\n  photo: photo14,\n  clicked: false\n},\n{\n  id: 15,\n  photo: photo15,\n  clicked: false\n},\n{\n  id: 16,\n  photo: photo16,\n  clicked: false\n},\n\n];\n\n\nclass App extends Component {\n state = {\n   photos: photos,\n   message: 'Click Any Image to Begin',\n   score: 0,\n   HighScore: 0\n }\n\n\nhandlePhotosClick = (event) => {\n\n  let id= Number(event.target.dataset.id)\n  console.log(id);\n  var clone = this.state.photos\n  var lost = false \n  for (let i = 0; i < clone.length; i++){\n      if(clone[i].id === id){\n        if(clone[i].clicked === true){\n         lost = true\n      }\n\n      if(clone[i].clicked === false){\n        clone[i].clicked = true\n        this.setState({\n          massage: \"Good job! Click another\" ,\n          score: this.state.score + 1\n        })\n      }\n    }\n   \n   \n  } \n\n  clone = clone.sort(() => Math.random() - 0.5);\n  this.setState({\n    photos: clone\n  })\n\n  if (lost === true){\n    for (let i = 0; i < clone.length; i++) {\n      clone[i].clicked = false\n    }\n    alert(\"Game over!\")\n    if(this.state.score > this.state.HighScore){\n      this.setState({\n        HighScore: this.state.score\n      })\n    }\n    this.setState({\n      message: \"Game Over\",\n      photos: clone ,\n      score:0\n    })\n    var that = this\n    setTimeout (function(){\n      that.setState({\n        message: \"Click Any Image to Begain\"\n      }) \n    }, 1000)\n  }\n\n}\nrender() {\nlet displayPhotos = this.state.photos.map(each => \n<img key={each.id} alt={each.id} data-id={each.id} src={each.photo} onClick={this.handlePhotosClick}></img> \n  )\nreturn (\n  <div className=\"App\">\n\n  <div id=\"header\">\n  <div>Click Game</div>\n  <div>{this.state.message}</div>\n<div>Score: {this.state.score} Top Score: {this.state.HighScore}</div>\n</div>\n<Container>\n  <Row>\n    <Col size=\"mid-6\">\n<div id=\"cute\">\n\n{displayPhotos}\n\n</div>\n</Col>\n</Row>\n</Container>\n</div>\n);\n\n}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}